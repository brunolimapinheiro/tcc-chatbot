
import { MongoDBConnection } from "@/database/MongoDBConnection";
import { IConversation } from "../Conversation/IConversation";
import { TypeSend } from "../Conversation/TypeSend";
import { UserPhone } from "../UserPhones/UserPhones";
import { ConversationAI } from "@/Conversation/Conversation-Ai";

require('dotenv').config()

export class FeedBackUser implements IConversation{

    private send : TypeSend;
    private userPhone: UserPhone;
    private db:MongoDBConnection;
    private url:string;
    private firstQuestion:string;
    private secondQuestion:string;
    private conversation: ConversationAI;
    private responseFirstQuestion:boolean;
    private responseSecondQuestion:boolean;

    constructor(send : TypeSend, conversation:ConversationAI){
        this.send = send;
        this.userPhone = new UserPhone();
        this.url = process.env.MONGODB;
        this.db = new MongoDBConnection(this.url);
        this.conversation = conversation;
        this.responseFirstQuestion = false;
        this.responseSecondQuestion = false;
       

    }



   async ask(id: string,message:string) {
    if(message=="avaliar" || message=="Avaliar"|| message==="Avalia√ß√£o"){
        await this.send(id,{text:"Voc√™ achou mais facil achar as informa√ß√µes pelo pr√≥prio chatbot ou nas plataformas que est√£o disponiveis essas informa√ß√µes? RESPONDA com a palavra chatbot ou plataformas do ifpi"});
        
    }

   else if(message=="chatbot" || message=="plataformas do ifpi"|| message=="Chatbot" || message=="Plataformas do IFPI" ||message=="Plataformas do ifpi "|| message=="IFPI " || message=="ifpi"){
    this.responseFirstQuestion= true;
    this.firstQuestion = message;
    await this.send(id,{text:"Voc√™ recomendaria o chatbot para outros alunos? RESPONDA com a palavra sim ou n√£o"});
    
   }

   else if(message=="sim"||message=="nao"|| message=="Sim"|| message =="Nao"|| message=="n√£o" || message=="N√£o"){
        this.responseSecondQuestion = true;
        this.secondQuestion = message;
        await this.send(id,{text:"Gostar√≠amos de saber como foi sua experi√™ncia conosco. Por favor, avalie nosso chatbot de 1 a 10,  sendo 1  para P√©ssimo e  10 para Excelente. Sua opini√£o √© muito importante para n√≥s!"})
        this.conversation.setMessageAsk(false);
        this.conversation.setCloseConversation(true);
    } 
    else{
        await this.send(id,{text:"Ops! n√£o entendi, por favor responda a pergunta corretamente"})
        if(!this.responseFirstQuestion){
            message = "avaliar";
            this.ask(id,message);                       
        }
        else if(!this.responseSecondQuestion){
           message = "chatbot";
           this.ask(id,message);
        }
    }
   
}
    async answer(id: string,message:string,name:string) {
        await this.send(id, { text: "Muito obrigado por nos dar sua opini√£o! üòä A sua avalia√ß√£o nos ajuda a melhorar continuamente nossos servi√ßos. üëç Se precisar de mais alguma coisa, n√£o hesite em nos procurar. At√© a pr√≥xima e bons estudos! üìö" });
        this.db.insert(name,message,this.firstQuestion,this.secondQuestion);
        this.db.close();
        this.userPhone.deletePhone(id);
        this.responseFirstQuestion = false;
        this.responseSecondQuestion = false;
    }
}